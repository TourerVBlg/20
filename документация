Документация по Чат-серверу
Обзор
Данный код реализует базовый чат-сервер, который позволяет клиентам подключаться и обмениваться сообщениями. Сервер использует протокол TCP/IP для обмена данными и предоставляет функциональность аутентификации с использованием алгоритма хеширования SHA-256.

Зависимости
Код зависит от следующих библиотек:

Boost.Asio: Кросс-платформенная библиотека на C++ для сетевого программирования.
OpenSSL: Мощный набор инструментов для протоколов SSL/TLS.
Убедитесь, что у вас установлены эти библиотеки перед компиляцией и запуском кода.

Класс сервера (Server)
Класс Server представляет собой чат-сервер. Он слушает входящие подключения от клиентов и обрабатывает каждое подключение в отдельном потоке.

Публичные методы:
start(): Запускает сервер, прослушивая определенный порт и принимая входящие подключения в цикле. Этот метод выполняется бесконечно, пока сервер не будет остановлен вручную.
Приватные методы:
handle_peer(): Обрабатывает соединение с клиентом. Этот метод выполняется в отдельном потоке и осуществляет фактическое взаимодействие с клиентом.
handle_exception(): Обрабатывает исключения, возникающие при взаимодействии с клиентом. Он очищает ресурсы и закрывает соединение.
Класс менеджера учетных данных пользователей (UserCredentialsManager)
Класс UserCredentialsManager управляет учетными данными пользователей для целей аутентификации. Он предоставляет методы для регистрации и входа пользователя с использованием алгоритма хеширования SHA-256.

Публичные методы:
login(username: str, password: str) -> bool: Выполняет аутентификацию пользователя, проверяя, соответствуют ли предоставленное имя пользователя и пароль сохраненным учетным данным. Возвращает True, если аутентификация успешна, в противном случае возвращает False.
registerUser(username: str, password: str) -> bool: Регистрирует нового пользователя с указанным именем пользователя и паролем. Возвращает True, если регистрация успешна, в противном случае возвращает False.
Функция хеширования (sha256)
Функция sha256() реализует алгоритм хеширования SHA-256. Она принимает строку в качестве входных данных и возвращает соответствующее значение хеша SHA-256 в виде шестнадцатеричной строки.

Главная функция
Функция main() создает экземпляр класса Server и запускает сервер, вызывая метод start().

Пример использования
Server server;
server.start();
Примечания:
Чат-сервер слушает порт 12345. Вы можете изменить этот номер порта в коде, если это необходимо.
Функциональность аутентификации с использованием `UserCredentialsManager
